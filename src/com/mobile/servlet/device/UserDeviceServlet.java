package com.mobile.servlet.device;import com.mobile.model.Device;import com.mobile.model.Ed;import com.mobile.model.Employee;import com.mobile.util.DaoFactory;import com.mobile.util.Pagination;import javax.servlet.ServletException;import javax.servlet.annotation.WebServlet;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.io.IOException;import java.util.ArrayList;import java.util.List;@WebServlet(name = "UserDeviceServlet", urlPatterns = {"/UserDeviceServlet"})public class UserDeviceServlet extends HttpServlet {    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {        deosomething(request,response);    }    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {        deosomething(request,response);    }    private void deosomething(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {        request.setCharacterEncoding("UTF-8");        response.setCharacterEncoding("UTF-8");        String pageNo = request.getParameter("pageNo");        int page = 1;        if(pageNo!=null) {            page = Integer.parseInt(pageNo);        }        Employee employee = (Employee) request.getSession(false).getAttribute("user");        String eid = employee.getEid();        String did = request.getParameter("did");        if(did!=null){ //进行下一步判断            if(DaoFactory.getDeviceDao().getDevice(did).isDstatus()){ //进行归还设备操作                Ed ed = new Ed();                ed.setEid(eid);                ed.setDid(did);                if(DaoFactory.getEdDao().deleteEd(did,eid)){                    Device d = DaoFactory.getDeviceDao().getDevice(did);                    d.setDstatus(false);                    if(!DaoFactory.getDeviceDao().updateDevice(d)){                        request.setAttribute("point", "对不起,设备更新状态失败！！！");                        request.getRequestDispatcher("/point.jsp").forward(request, response);                    }                }else{                    request.setAttribute("point", "对不起,设备归还失败！！！");                    request.getRequestDispatcher("/point.jsp").forward(request, response);                }            }else{//进行申请设备操作                Device d = DaoFactory.getDeviceDao().getDevice(did);                d.setDstatus(true);                if(DaoFactory.getDeviceDao().updateDevice(d)) {                    Ed ed = new Ed();                    ed.setEid(eid);                    ed.setDid(did);                    if (!DaoFactory.getEdDao().insertEd(ed)) {                        request.setAttribute("point", "对不起,申请设备出现了一点小问题！！！");                        request.getRequestDispatcher("/point.jsp").forward(request, response);                    }                }else{                    request.setAttribute("point", "对不起,设备状态更新失败！！！");                    request.getRequestDispatcher("/point.jsp").forward(request, response);                }            }        }//显示员工元月的设备        DisplayUserDevice(request,response,page,eid);    }    private void DisplayUserDevice(HttpServletRequest request, HttpServletResponse response, int page, String eid) throws ServletException, IOException{        Pagination pagination = new Pagination();        pagination.setPageNo(page);        pagination.setUrl("DisplayDeviceServlet?");        List<Ed> eds = DaoFactory.getEdDao().getAllEd(eid, pagination);        List<Device> devices = new ArrayList<>();        //然后根据id找到他已申请所有设备        for (Ed e : eds) {            Device de = DaoFactory.getDeviceDao().getDevice(e.getDid());            devices.add(de);        }        request.setAttribute("des", devices);        request.setAttribute("pagination", pagination);        request.getRequestDispatcher("devicereturn.jsp").forward(request, response);    }}