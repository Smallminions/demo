package com.mobile.dao.impl;import com.mobile.dao.SeatDao;import com.mobile.model.Seat;import com.mobile.util.DaoFactory;import com.mobile.util.DatabaseBean;import com.mobile.util.Pagination;import java.sql.*;import java.util.ArrayList;import java.util.List;public class SeatDaoImpl implements SeatDao {    Connection con = null;    CallableStatement sta = null;    ResultSet res = null;    String sql = null;    /**     *getSeatCount     * getSeats     * findSeat     * updateSeat     */    @Override    public List<Seat> getAllSeat(String sarea,Pagination pagination) {        List<Seat> seats = new ArrayList<Seat>();        try{            sql = "{call getSeatCount(?,?)}";            con = DatabaseBean.getConnection();            sta = con.prepareCall(sql);            if(sarea.equals("全部"))                sta.setString(1,null);            else                sta.setString(1,sarea);            sta.registerOutParameter(2, Types.INTEGER);            res = sta.executeQuery();            int count = sta.getInt(2);            pagination.setCountSize(count);            //求指定显示的记录数            int perPage = pagination.getPageSize();            int start = (pagination.getPageNo()-1)*perPage;            sql = "{call getSeats(?,?,?)}";            sta = con.prepareCall(sql);            if(sarea.equals("全部"))                sta.setString(1,null);            else                sta.setString(1,sarea);            sta.setInt(2,start);            sta.setInt(3,pagination.getPageSize());            res = sta.executeQuery();            while(res.next()){                Seat seat = new Seat();                seat.setSid(res.getString(1));                seat.setEid(res.getString(2));                seat.setSarea(res.getString(3));                seat.setSstatus(res.getString(4).equals("是")?true:false);                seat.setIsusing(res.getString(5).equals("是")?true:false);                seat.setIsleave(res.getString(6));                seat.setSstart(res.getString(7));                seat.setSend(res.getString(8));                seat.setSremark(res.getString(9));                seats.add(seat);            }            return seats;        }catch (SQLException e){            e.printStackTrace();        }finally {            DatabaseBean.close(res,sta,con);        }        return null;    }    @Override    public Seat getSeat(String sid) {        try{            sql = "{call findSeat(?)}";            con = DatabaseBean.getConnection();            sta = con.prepareCall(sql);            sta.setString(1,sid);            res = sta.executeQuery();            while(res.next()){                Seat seat = new Seat();                seat.setSid(res.getString(1));                seat.setEid(res.getString(2));                seat.setSarea(res.getString(3));                seat.setSstatus(res.getString(4).equals("是")?true:false);                seat.setIsusing(res.getString(5).equals("是")?true:false);                seat.setIsleave(res.getString(6));                seat.setSstart(res.getString(7));                seat.setSend(res.getString(8));                seat.setSremark(res.getString(9));                return seat;            }        }catch (SQLException e){            e.printStackTrace();        }finally {            DatabaseBean.close(res,sta,con);        }        return null;    }    @Override    public boolean findSeat(String sid) {        if(getSeat(sid)==null)            return false;        else            return true;    }    @Override    public boolean updateSeat(Seat seat) {        try{            con = DatabaseBean.getConnection();            sql = "{call updateSeat(?,?,?,?,?,?,?,?,?)}";            sta = con.prepareCall(sql);            sta.setString(1,seat.getSid());            sta.setString(2,seat.getEid());            sta.setString(3,seat.getSarea());            sta.setString(4,seat.getSstatus()?"是":"否");            sta.setString(5,seat.getIsusing()?"是":"否");            sta.setString(6,seat.getIsleave());            sta.setString(7,seat.getSstart());            sta.setString(8,seat.getSend());            sta.setString(9,seat.getSremark());            res = sta.executeQuery();            return true;        }catch (SQLException e){            e.printStackTrace();        }finally {            DatabaseBean.close(res,sta,con);        }        return false;    }    @Override    public String[] getSeatAreas() {        String[] areas;        try{            sql = "{call getSeatAreas()}";            con = DatabaseBean.getConnection();            sta = con.prepareCall(sql);            res = sta.executeQuery();            res.last();            int s = res.getRow()+1;//获取结果集数量            res.beforeFirst();            areas = new String[s];            areas[0] = "全部";            int i =1;            while (res.next()) {                areas[i] = res.getString(1);                i++;            }            return areas;        }catch (SQLException e){            e.printStackTrace();        }finally {            DatabaseBean.close(res,sta,con);        }        return null;    }}