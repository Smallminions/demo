package com.mobile.dao.impl;import com.mobile.dao.EdDao;import com.mobile.model.Ed;import com.mobile.util.DatabaseBean;import com.mobile.util.Pagination;import java.sql.*;import java.util.ArrayList;import java.util.List;/** * getEdCount * getEdIds * findEd * insertEd * deleteEd */public class EdDaoImpl implements EdDao {    Connection con = null;    CallableStatement sta = null;    ResultSet res = null;    String sql = null;    /**     * 返回某个员工预约的所有设备号     * @param eid     * @param pagination     * @return     */    @Override    public List<Ed> getAllEd(String eid,Pagination pagination) {        List<Ed> eds = new ArrayList<Ed>();        try{            sql = "{call getEdCount(?,?)}";            con = DatabaseBean.getConnection();            sta = con.prepareCall(sql);            sta.setString(1,eid);            sta.registerOutParameter(2, Types.INTEGER);            res = sta.executeQuery();            int count = sta.getInt(2);            pagination.setCountSize(count);            //求指定显示的记录数            int perPage = pagination.getPageSize();            int start = (pagination.getPageNo()-1)*perPage;            sql = "{call getEds(?,?,?)}";            sta = con.prepareCall(sql);            sta.setString(1,eid);            sta.setInt(2,start);            sta.setInt(3,pagination.getPageSize());            res = sta.executeQuery();            while (res.next()){                Ed ed = new Ed();                ed.setEid(res.getString(1));                ed.setDid(res.getString(2));                eds.add(ed);            }            return eds;        }catch (SQLException e){           e.printStackTrace();        }finally {            DatabaseBean.close(res,sta,con);        }        return null;    }    @Override    public boolean findEd(String did, String eid) {        try{            sql = "{call findEd(?,?)}";            con = DatabaseBean.getConnection();            sta = con.prepareCall(sql);            sta.setString(1,eid);            sta.setString(2,did);            res = sta.executeQuery();            while (res.next()){                return true;            }        }catch (SQLException e){            e.printStackTrace();        }finally {            DatabaseBean.close(res,sta,con);        }        return false;    }    @Override    public boolean insertEd(Ed ed) {        try{            sql = "{call insertEd(?,?)}";            con = DatabaseBean.getConnection();            sta = con.prepareCall(sql);            sta.setString(1,ed.getEid());            sta.setString(2,ed.getDid());            res = sta.executeQuery();            if(res.toString().endsWith("1"))                return true;            else                return false;        }catch (SQLException e){            e.printStackTrace();        }finally {            DatabaseBean.close(res,sta,con);        }        return false;    }    @Override    public boolean deleteEd(String did, String eid) {        try{            sql = "{call deleteEd(?,?)}";            con = DatabaseBean.getConnection();            sta = con.prepareCall(sql);            sta.setString(1,eid);            sta.setString(2,did);            res = sta.executeQuery();            if(res.toString().endsWith("1"))                return true;            else                return false;        }catch (SQLException e){            e.printStackTrace();        }finally {            DatabaseBean.close(res,sta,con);        }        return false;    }}